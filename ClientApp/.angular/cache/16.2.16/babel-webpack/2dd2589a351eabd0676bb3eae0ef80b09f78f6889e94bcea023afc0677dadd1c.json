{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AppointmentService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    //------------\n    this.appointments = [{\n      id: 1,\n      patientName: 'John Doe',\n      doctorName: 'Dr. Smith',\n      appointmentDate: '2025-08-20',\n      visitType: 'First',\n      diagnosis: 'Fever',\n      notes: 'Patient complains of high fever',\n      doctorId: 1,\n      patientId: 1,\n      prescriptions: []\n    }, {\n      id: 2,\n      patientName: 'Jane Smith',\n      doctorName: 'Dr. Brown',\n      appointmentDate: '2025-08-21',\n      visitType: 'Follow-up',\n      diagnosis: 'Diabetes',\n      notes: 'Regular checkup',\n      doctorId: 1,\n      patientId: 1,\n      prescriptions: []\n    }];\n    this.appointmentsSubject = new BehaviorSubject(this.appointments);\n    this.appointments$ = this.appointmentsSubject.asObservable();\n    this.patients = ['John Doe', 'Jane Smith', 'Bob Johnson'];\n    this.doctors = ['Dr. Smith', 'Dr. Brown', 'Dr. Johnson'];\n    this.medicines = ['Paracetamol', 'Amoxicillin', 'Metformin', 'Aspirin', 'Ibuprofen', 'Omeprazole'];\n    this.url = `${environment.apiUrl}/Appointment`;\n  }\n  setAppointment(appointment) {\n    this.selectedAppointment = appointment;\n  }\n  getAppointment() {\n    return this.selectedAppointment;\n  }\n  getAppointments() {\n    return this.appointments$;\n  }\n  // getAppointmentById(id: number) {\n  //   let fullUrl = `${this.url}/${id}}`;\n  //   return this.httpClient.get<AppointmentDTO>(fullUrl, { responseType: 'json' })\n  //     .pipe(map(\n  //       (data) => {\n  //         return data;\n  //       }\n  //     ));\n  // }\n  getAppointmentById(id) {\n    const fullUrl = `${this.url}/${id}`;\n    return this.httpClient.get(fullUrl);\n  }\n  //--\n  createAppointment(appointment) {\n    const newAppointment = {\n      ...appointment,\n      id: this.getNextId()\n    };\n    this.appointments.push(newAppointment);\n    this.appointmentsSubject.next([...this.appointments]);\n  }\n  updateAppointment(id, appointment) {\n    const index = this.appointments.findIndex(a => a.id === id);\n    if (index !== -1) {\n      this.appointments[index] = {\n        ...appointment,\n        id\n      };\n      this.appointmentsSubject.next([...this.appointments]);\n    }\n  }\n  deleteAppointment(id) {\n    this.appointments = this.appointments.filter(a => a.id !== id);\n    this.appointmentsSubject.next([...this.appointments]);\n  }\n  getNextId() {\n    return this.appointments.length > 0 ? Math.max(...this.appointments.map(a => a.id)) + 1 : 1;\n  }\n  static {\n    this.ɵfac = function AppointmentService_Factory(t) {\n      return new (t || AppointmentService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AppointmentService,\n      factory: AppointmentService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","environment","AppointmentService","constructor","httpClient","appointments","id","patientName","doctorName","appointmentDate","visitType","diagnosis","notes","doctorId","patientId","prescriptions","appointmentsSubject","appointments$","asObservable","patients","doctors","medicines","url","apiUrl","setAppointment","appointment","selectedAppointment","getAppointment","getAppointments","getAppointmentById","fullUrl","get","createAppointment","newAppointment","getNextId","push","next","updateAppointment","index","findIndex","a","deleteAppointment","filter","length","Math","max","map","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Numan Al Bakir\\source\\repos\\MedicalAppointmentSystem\\ClientApp\\src\\app\\_services\\appointment.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AppointmentDTO } from '../_models/appointmentDTO';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { DoctorDTO } from '../_models/doctorDTO';\nimport { PatientDTO } from '../_models/patientDTO';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppointmentService {\n\n  private url!: string;\n  private selectedAppointment!: AppointmentDTO;\n\n  constructor(private httpClient: HttpClient) {\n    this.url = `${environment.apiUrl}/Appointment`;\n  }\n\n  setAppointment(appointment: AppointmentDTO) {\n    this.selectedAppointment = appointment;\n  }\n\n  getAppointment(): AppointmentDTO {\n    return this.selectedAppointment;\n  }\n\n\n  //------------\n\n  private appointments: AppointmentDTO[] = [\n    {\n      id: 1,\n      patientName: 'John Doe',\n      doctorName: 'Dr. Smith',\n      appointmentDate: '2025-08-20',\n      visitType: 'First',\n      diagnosis: 'Fever',\n      notes: 'Patient complains of high fever',\n      doctorId: 1,\n      patientId : 1,\n      prescriptions: []\n    },\n    {\n      id: 2,\n      patientName: 'Jane Smith',\n      doctorName: 'Dr. Brown',\n      appointmentDate: '2025-08-21',\n      visitType: 'Follow-up',\n      diagnosis: 'Diabetes',\n      notes: 'Regular checkup',\n      doctorId: 1,\n      patientId : 1,\n      prescriptions: []\n    }\n  ];\n\n  private appointmentsSubject = new BehaviorSubject<AppointmentDTO[]>(this.appointments);\n  public appointments$ = this.appointmentsSubject.asObservable();\n\n  patients = ['John Doe', 'Jane Smith', 'Bob Johnson'];\n  doctors = ['Dr. Smith', 'Dr. Brown', 'Dr. Johnson'];\n  medicines = ['Paracetamol', 'Amoxicillin', 'Metformin', 'Aspirin', 'Ibuprofen', 'Omeprazole'];\n\n\n  getAppointments(): Observable<AppointmentDTO[]> {\n    return this.appointments$;\n  }\n\n  // getAppointmentById(id: number) {\n  //   let fullUrl = `${this.url}/${id}}`;\n  //   return this.httpClient.get<AppointmentDTO>(fullUrl, { responseType: 'json' })\n  //     .pipe(map(\n  //       (data) => {\n  //         return data;\n  //       }\n  //     ));\n  // }\n\n  getAppointmentById(id: number): Observable<AppointmentDTO> {\n    const fullUrl = `${this.url}/${id}`;\n    return this.httpClient.get<AppointmentDTO>(fullUrl);\n  }\n\n//--\n\n  createAppointment(appointment: Omit<AppointmentDTO, 'id'>): void {\n    const newAppointment: AppointmentDTO = {\n      ...appointment,\n      id: this.getNextId()\n    };\n    this.appointments.push(newAppointment);\n    this.appointmentsSubject.next([...this.appointments]);\n  }\n\n  updateAppointment(id: number, appointment: Omit<AppointmentDTO, 'id'>): void {\n    const index = this.appointments.findIndex(a => a.id === id);\n    if (index !== -1) {\n      this.appointments[index] = { ...appointment, id };\n      this.appointmentsSubject.next([...this.appointments]);\n    }\n  }\n\n  deleteAppointment(id: number): void {\n    this.appointments = this.appointments.filter(a => a.id !== id);\n    this.appointmentsSubject.next([...this.appointments]);\n  }\n\n  private getNextId(): number {\n    return this.appointments.length > 0 ? Math.max(...this.appointments.map(a => a.id)) + 1 : 1;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}