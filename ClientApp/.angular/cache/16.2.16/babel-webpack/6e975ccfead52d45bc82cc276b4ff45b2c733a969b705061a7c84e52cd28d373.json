{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AppointmentService {\n  // private selectedAppointment!: AppointmentDTO;\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = `${environment.apiUrl}/appointments`;\n  }\n  // setAppointment(appointment: AppointmentDTO) {\n  //   this.selectedAppointment = appointment;\n  // }\n  // getAppointment(): AppointmentDTO {\n  //   return this.selectedAppointment;\n  // }\n  createAppointment(appointmentDTO) {\n    return this.httpClient.post(this.url, appointmentDTO, {\n      responseType: 'json'\n    });\n  }\n  updateAppointment(id, appointmentDTO) {\n    let fullUrl = this.url + `/${id}`;\n    return this.httpClient.put(fullUrl, appointmentDTO, {\n      responseType: 'json'\n    });\n  }\n  deleteAppointment(id) {\n    this.appointments = this.appointments.filter(a => a.id !== id);\n    this.appointmentsSubject.next([...this.appointments]);\n  }\n  getAppointmentById(id) {\n    const fullUrl = `${this.url}/${id}`;\n    return this.httpClient.get(fullUrl);\n  }\n  static {\n    this.ɵfac = function AppointmentService_Factory(t) {\n      return new (t || AppointmentService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AppointmentService,\n      factory: AppointmentService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","AppointmentService","constructor","httpClient","url","apiUrl","createAppointment","appointmentDTO","post","responseType","updateAppointment","id","fullUrl","put","deleteAppointment","appointments","filter","a","appointmentsSubject","next","getAppointmentById","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Numan Al Bakir\\source\\repos\\MedicalAppointmentSystem\\ClientApp\\src\\app\\_services\\appointment.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AppointmentDTO } from '../_models/appointmentDTO';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { DoctorDTO } from '../_models/doctorDTO';\nimport { PatientDTO } from '../_models/patientDTO';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppointmentService {\n\n  private url!: string;\n  // private selectedAppointment!: AppointmentDTO;\n\n  constructor(private httpClient: HttpClient) {\n    this.url = `${environment.apiUrl}/appointments`;\n  }\n\n  // setAppointment(appointment: AppointmentDTO) {\n  //   this.selectedAppointment = appointment;\n  // }\n\n  // getAppointment(): AppointmentDTO {\n  //   return this.selectedAppointment;\n  // }\n\n\n  createAppointment(appointmentDTO: AppointmentDTO) {\n      return this.httpClient.post<AppointmentDTO>(this.url, appointmentDTO, { responseType: 'json' });\n  }\n\n  updateAppointment(id: number, appointmentDTO: AppointmentDTO) {\n      let fullUrl = this.url + `/${id}`;\n      return this.httpClient.put<AppointmentDTO>(fullUrl, appointmentDTO, { responseType: 'json' });\n  }\n\n  deleteAppointment(id: number): void {\n    this.appointments = this.appointments.filter(a => a.id !== id);\n    this.appointmentsSubject.next([...this.appointments]);\n  }\n\n  getAppointmentById(id: number): Observable<AppointmentDTO> {\n    const fullUrl = `${this.url}/${id}`;\n    return this.httpClient.get<AppointmentDTO>(fullUrl);\n  }\n}"],"mappings":"AAMA,SAASA,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,kBAAkB;EAG7B;EAEAC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAC5B,IAAI,CAACC,GAAG,GAAG,GAAGJ,WAAW,CAACK,MAAM,eAAe;EACjD;EAEA;EACA;EACA;EAEA;EACA;EACA;EAGAC,iBAAiBA,CAACC,cAA8B;IAC5C,OAAO,IAAI,CAACJ,UAAU,CAACK,IAAI,CAAiB,IAAI,CAACJ,GAAG,EAAEG,cAAc,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EACnG;EAEAC,iBAAiBA,CAACC,EAAU,EAAEJ,cAA8B;IACxD,IAAIK,OAAO,GAAG,IAAI,CAACR,GAAG,GAAG,IAAIO,EAAE,EAAE;IACjC,OAAO,IAAI,CAACR,UAAU,CAACU,GAAG,CAAiBD,OAAO,EAAEL,cAAc,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EACjG;EAEAK,iBAAiBA,CAACH,EAAU;IAC1B,IAAI,CAACI,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACN,EAAE,KAAKA,EAAE,CAAC;IAC9D,IAAI,CAACO,mBAAmB,CAACC,IAAI,CAAC,CAAC,GAAG,IAAI,CAACJ,YAAY,CAAC,CAAC;EACvD;EAEAK,kBAAkBA,CAACT,EAAU;IAC3B,MAAMC,OAAO,GAAG,GAAG,IAAI,CAACR,GAAG,IAAIO,EAAE,EAAE;IACnC,OAAO,IAAI,CAACR,UAAU,CAACkB,GAAG,CAAiBT,OAAO,CAAC;EACrD;;;uBAnCWX,kBAAkB,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAlBxB,kBAAkB;MAAAyB,OAAA,EAAlBzB,kBAAkB,CAAA0B,IAAA;MAAAC,UAAA,EAFjB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}