{"ast":null,"code":"import { Subject, takeUntil } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/appointment.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AppointmentListComponent_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const doctor_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", doctor_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", doctor_r3, \" \");\n  }\n}\nfunction AppointmentListComponent_tr_49_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"span\", 28);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\")(13, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function AppointmentListComponent_tr_49_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const appointment_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.editAppointment(appointment_r4.id));\n    });\n    i0.ɵɵelement(14, \"i\", 30);\n    i0.ɵɵtext(15, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function AppointmentListComponent_tr_49_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const appointment_r4 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.editAppointment(appointment_r4.id));\n    });\n    i0.ɵɵelement(17, \"i\", 30);\n    i0.ɵɵtext(18, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function AppointmentListComponent_tr_49_Template_button_click_19_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const appointment_r4 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.deleteAppointment(appointment_r4.id));\n    });\n    i0.ɵɵelement(20, \"i\", 32);\n    i0.ɵɵtext(21, \" Delete \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function AppointmentListComponent_tr_49_Template_button_click_22_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const appointment_r4 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.downloadPrescription(appointment_r4));\n    });\n    i0.ɵɵelement(23, \"i\", 34);\n    i0.ɵɵtext(24, \" PDF \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const appointment_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r4.patient);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r4.doctor);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.formatDate(appointment_r4.date));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", appointment_r4.visitType === \"First\" ? \"bg-primary\" : \"bg-secondary\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", appointment_r4.visitType, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(appointment_r4.diagnosis);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    active: a0\n  };\n};\nfunction AppointmentListComponent_nav_50_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 37)(1, \"a\", 38);\n    i0.ɵɵlistener(\"click\", function AppointmentListComponent_nav_50_li_2_Template_a_click_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const page_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.changePage($event, page_r11));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const page_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, page_r11 === ctx_r10.currentPage));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(page_r11);\n  }\n}\nfunction AppointmentListComponent_nav_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nav\")(1, \"ul\", 35);\n    i0.ɵɵtemplate(2, AppointmentListComponent_nav_50_li_2_Template, 3, 4, \"li\", 36);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.getPageNumbers());\n  }\n}\nexport class AppointmentListComponent {\n  constructor(appointmentService, router) {\n    this.appointmentService = appointmentService;\n    this.router = router;\n    this.appointments = [];\n    this.filteredAppointments = [];\n    this.paginatedAppointments = [];\n    this.searchTerm = '';\n    this.doctorFilter = '';\n    this.visitTypeFilter = '';\n    this.currentPage = 1;\n    this.itemsPerPage = 10;\n    this.totalPages = 0;\n    this.destroy$ = new Subject();\n  }\n  ngOnInit() {\n    this.appointmentService.getAppointments().pipe(takeUntil(this.destroy$)).subscribe(appointments => {\n      this.appointments = appointments;\n      this.applyFilters();\n    });\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  navigateToAdd() {\n    this.router.navigate(['/add-appointment']);\n  }\n  editAppointment(id) {\n    this.router.navigate(['/edit-appointment', id]);\n  }\n  deleteAppointment(id) {\n    if (confirm('Are you sure you want to delete this appointment?')) {\n      this.appointmentService.deleteAppointment(id);\n    }\n  }\n  downloadPrescription(appointment) {\n    const prescriptionModal = document.getElementById('prescriptionModal');\n    if (prescriptionModal && prescriptionModal.show) {\n      prescriptionModal.show(appointment);\n    }\n  }\n  applyFilters() {\n    this.filteredAppointments = this.appointments.filter(appointment => {\n      const matchesSearch = !this.searchTerm || appointment.patient.toLowerCase().includes(this.searchTerm.toLowerCase()) || appointment.doctor.toLowerCase().includes(this.searchTerm.toLowerCase());\n      const matchesDoctor = !this.doctorFilter || appointment.doctor === this.doctorFilter;\n      const matchesVisitType = !this.visitTypeFilter || appointment.visitType === this.visitTypeFilter;\n      return matchesSearch && matchesDoctor && matchesVisitType;\n    });\n    this.totalPages = Math.ceil(this.filteredAppointments.length / this.itemsPerPage);\n    this.currentPage = 1;\n    this.updatePagination();\n  }\n  changePage(event, page) {\n    event.preventDefault();\n    this.currentPage = page;\n    this.updatePagination();\n  }\n  updatePagination() {\n    const start = (this.currentPage - 1) * this.itemsPerPage;\n    const end = start + this.itemsPerPage;\n    this.paginatedAppointments = this.filteredAppointments.slice(start, end);\n  }\n  getPageNumbers() {\n    return Array.from({\n      length: this.totalPages\n    }, (_, i) => i + 1);\n  }\n  formatDate(dateString) {\n    return new Date(dateString).toLocaleDateString('en-GB');\n  }\n  static {\n    this.ɵfac = function AppointmentListComponent_Factory(t) {\n      return new (t || AppointmentListComponent)(i0.ɵɵdirectiveInject(i1.AppointmentService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppointmentListComponent,\n      selectors: [[\"app-appointment-list\"]],\n      decls: 51,\n      vars: 6,\n      consts: [[1, \"row\", \"mt-4\"], [1, \"col-12\"], [1, \"card\"], [1, \"card-header\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"mb-0\"], [1, \"bi\", \"bi-calendar-check\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"bi\", \"bi-plus-circle\"], [1, \"card-body\"], [1, \"search-filters\"], [1, \"row\"], [1, \"col-md-4\"], [\"type\", \"text\", \"placeholder\", \"Search by patient or doctor name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"col-md-3\"], [1, \"form-select\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"value\", \"First\"], [\"value\", \"Follow-up\"], [1, \"col-md-2\"], [1, \"btn\", \"btn-outline-primary\", \"w-100\", 3, \"click\"], [1, \"bi\", \"bi-search\"], [1, \"table-responsive\"], [1, \"table\", \"table-hover\"], [1, \"table-dark\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [3, \"value\"], [1, \"badge\", 3, \"ngClass\"], [1, \"btn\", \"btn-sm\", \"btn-outline-primary\", \"btn-action\", \"me-1\", 3, \"click\"], [1, \"bi\", \"bi-pencil\"], [1, \"btn\", \"btn-sm\", \"btn-outline-danger\", \"btn-action\", \"me-1\", 3, \"click\"], [1, \"bi\", \"bi-trash\"], [1, \"btn\", \"btn-sm\", \"btn-outline-success\", \"btn-action\", 3, \"click\"], [1, \"bi\", \"bi-download\"], [1, \"pagination\", \"justify-content-center\"], [\"class\", \"page-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"page-item\", 3, \"ngClass\"], [\"href\", \"#\", 1, \"page-link\", 3, \"click\"]],\n      template: function AppointmentListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h5\", 4);\n          i0.ɵɵelement(5, \"i\", 5);\n          i0.ɵɵtext(6, \" Patient Appointments\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function AppointmentListComponent_Template_button_click_7_listener() {\n            return ctx.navigateToAdd();\n          });\n          i0.ɵɵelement(8, \"i\", 7);\n          i0.ɵɵtext(9, \" Add Appointment \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 8)(11, \"div\", 9)(12, \"div\", 10)(13, \"div\", 11)(14, \"input\", 12);\n          i0.ɵɵlistener(\"ngModelChange\", function AppointmentListComponent_Template_input_ngModelChange_14_listener($event) {\n            return ctx.searchTerm = $event;\n          })(\"input\", function AppointmentListComponent_Template_input_input_14_listener() {\n            return ctx.applyFilters();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"div\", 13)(16, \"select\", 14);\n          i0.ɵɵlistener(\"ngModelChange\", function AppointmentListComponent_Template_select_ngModelChange_16_listener($event) {\n            return ctx.doctorFilter = $event;\n          })(\"change\", function AppointmentListComponent_Template_select_change_16_listener() {\n            return ctx.applyFilters();\n          });\n          i0.ɵɵelementStart(17, \"option\", 15);\n          i0.ɵɵtext(18, \"Filter by Doctor\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(19, AppointmentListComponent_option_19_Template, 2, 2, \"option\", 16);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(20, \"div\", 13)(21, \"select\", 14);\n          i0.ɵɵlistener(\"ngModelChange\", function AppointmentListComponent_Template_select_ngModelChange_21_listener($event) {\n            return ctx.visitTypeFilter = $event;\n          })(\"change\", function AppointmentListComponent_Template_select_change_21_listener() {\n            return ctx.applyFilters();\n          });\n          i0.ɵɵelementStart(22, \"option\", 15);\n          i0.ɵɵtext(23, \"Filter by Visit Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"option\", 17);\n          i0.ɵɵtext(25, \"First Visit\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"option\", 18);\n          i0.ɵɵtext(27, \"Follow-up\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(28, \"div\", 19)(29, \"button\", 20);\n          i0.ɵɵlistener(\"click\", function AppointmentListComponent_Template_button_click_29_listener() {\n            return ctx.applyFilters();\n          });\n          i0.ɵɵelement(30, \"i\", 21);\n          i0.ɵɵtext(31, \" Search \");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(32, \"div\", 22)(33, \"table\", 23)(34, \"thead\", 24)(35, \"tr\")(36, \"th\");\n          i0.ɵɵtext(37, \"Patient\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"th\");\n          i0.ɵɵtext(39, \"Doctor\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(40, \"th\");\n          i0.ɵɵtext(41, \"Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(42, \"th\");\n          i0.ɵɵtext(43, \"Visit Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(44, \"th\");\n          i0.ɵɵtext(45, \"Diagnosis\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(46, \"th\");\n          i0.ɵɵtext(47, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(48, \"tbody\");\n          i0.ɵɵtemplate(49, AppointmentListComponent_tr_49_Template, 25, 6, \"tr\", 25);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(50, AppointmentListComponent_nav_50_Template, 3, 1, \"nav\", 26);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(14);\n          i0.ɵɵproperty(\"ngModel\", ctx.searchTerm);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.doctorFilter);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.appointmentService.doctors);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.visitTypeFilter);\n          i0.ɵɵadvance(28);\n          i0.ɵɵproperty(\"ngForOf\", ctx.paginatedAppointments);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.totalPages > 1);\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n      styles: [\".search-filters[_ngcontent-%COMP%] {\\n    background: #f8f9fa;\\n    padding: 15px;\\n    border-radius: 8px;\\n    margin-bottom: 20px;\\n}\\n\\n.btn-action[_ngcontent-%COMP%] {\\n    margin: 0 2px;\\n}\\n\\n.table-responsive[_ngcontent-%COMP%] {\\n    max-height: 400px;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwb2ludG1lbnQtbGlzdC9hcHBvaW50bWVudC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7SUFDbkIsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksd0NBQXdDO0FBQzVDIiwic291cmNlc0NvbnRlbnQiOlsiLnNlYXJjaC1maWx0ZXJzIHtcclxuICAgIGJhY2tncm91bmQ6ICNmOGY5ZmE7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxuLmJ0bi1hY3Rpb24ge1xyXG4gICAgbWFyZ2luOiAwIDJweDtcclxufVxyXG5cclxuLnRhYmxlLXJlc3BvbnNpdmUge1xyXG4gICAgbWF4LWhlaWdodDogNDAwcHg7XHJcbn1cclxuXHJcbi5jYXJkIHtcclxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["Subject","takeUntil","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","doctor_r3","ɵɵadvance","ɵɵtextInterpolate1","ɵɵlistener","AppointmentListComponent_tr_49_Template_button_click_13_listener","restoredCtx","ɵɵrestoreView","_r6","appointment_r4","$implicit","ctx_r5","ɵɵnextContext","ɵɵresetView","editAppointment","id","ɵɵelement","AppointmentListComponent_tr_49_Template_button_click_16_listener","ctx_r7","AppointmentListComponent_tr_49_Template_button_click_19_listener","ctx_r8","deleteAppointment","AppointmentListComponent_tr_49_Template_button_click_22_listener","ctx_r9","downloadPrescription","ɵɵtextInterpolate","patient","doctor","ctx_r1","formatDate","date","visitType","diagnosis","AppointmentListComponent_nav_50_li_2_Template_a_click_1_listener","$event","_r13","page_r11","ctx_r12","changePage","ɵɵpureFunction1","_c0","ctx_r10","currentPage","ɵɵtemplate","AppointmentListComponent_nav_50_li_2_Template","ctx_r2","getPageNumbers","AppointmentListComponent","constructor","appointmentService","router","appointments","filteredAppointments","paginatedAppointments","searchTerm","doctorFilter","visitTypeFilter","itemsPerPage","totalPages","destroy$","ngOnInit","getAppointments","pipe","subscribe","applyFilters","ngOnDestroy","next","complete","navigateToAdd","navigate","confirm","appointment","prescriptionModal","document","getElementById","show","filter","matchesSearch","toLowerCase","includes","matchesDoctor","matchesVisitType","Math","ceil","length","updatePagination","event","page","preventDefault","start","end","slice","Array","from","_","i","dateString","Date","toLocaleDateString","ɵɵdirectiveInject","i1","AppointmentService","i2","Router","selectors","decls","vars","consts","template","AppointmentListComponent_Template","rf","ctx","AppointmentListComponent_Template_button_click_7_listener","AppointmentListComponent_Template_input_ngModelChange_14_listener","AppointmentListComponent_Template_input_input_14_listener","AppointmentListComponent_Template_select_ngModelChange_16_listener","AppointmentListComponent_Template_select_change_16_listener","AppointmentListComponent_option_19_Template","AppointmentListComponent_Template_select_ngModelChange_21_listener","AppointmentListComponent_Template_select_change_21_listener","AppointmentListComponent_Template_button_click_29_listener","AppointmentListComponent_tr_49_Template","AppointmentListComponent_nav_50_Template","doctors"],"sources":["C:\\Users\\Numan Al Bakir\\source\\repos\\MedicalAppointmentSystem\\ClientApp\\src\\app\\appointment-list\\appointment-list.component.ts","C:\\Users\\Numan Al Bakir\\source\\repos\\MedicalAppointmentSystem\\ClientApp\\src\\app\\appointment-list\\appointment-list.component.html"],"sourcesContent":["import { Appointment } from '../_models/appointment';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { AppointmentService } from '../_services/appointment.service';\n\n@Component({\n  selector: 'app-appointment-list',\n  templateUrl: './appointment-list.component.html',\n  styleUrls: ['./appointment-list.component.css']\n})\nexport class AppointmentListComponent implements OnInit {\n\n  appointments: Appointment[] = [];\n  filteredAppointments: Appointment[] = [];\n  paginatedAppointments: Appointment[] = [];\n\n  searchTerm = '';\n  doctorFilter = '';\n  visitTypeFilter = '';\n\n  currentPage = 1;\n  itemsPerPage = 10;\n  totalPages = 0;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    public appointmentService: AppointmentService,\n    private router: Router\n  ) { }\n\n ngOnInit(): void {\n    this.appointmentService.getAppointments()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(appointments => {\n        this.appointments = appointments;\n        this.applyFilters();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  navigateToAdd(): void {\n    this.router.navigate(['/add-appointment']);\n  }\n\n  editAppointment(id: number): void {\n    this.router.navigate(['/edit-appointment', id]);\n  }\n\n  deleteAppointment(id: number): void {\n    if (confirm('Are you sure you want to delete this appointment?')) {\n      this.appointmentService.deleteAppointment(id);\n    }\n  }\n\n  downloadPrescription(appointment: Appointment): void {\n    const prescriptionModal = document.getElementById('prescriptionModal') as any;\n    if (prescriptionModal && prescriptionModal.show) {\n      prescriptionModal.show(appointment);\n    }\n  }\n\n  applyFilters(): void {\n    this.filteredAppointments = this.appointments.filter(appointment => {\n      const matchesSearch = !this.searchTerm ||\n        appointment.patient.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\n        appointment.doctor.toLowerCase().includes(this.searchTerm.toLowerCase());\n\n      const matchesDoctor = !this.doctorFilter || appointment.doctor === this.doctorFilter;\n      const matchesVisitType = !this.visitTypeFilter || appointment.visitType === this.visitTypeFilter;\n\n      return matchesSearch && matchesDoctor && matchesVisitType;\n    });\n\n    this.totalPages = Math.ceil(this.filteredAppointments.length / this.itemsPerPage);\n    this.currentPage = 1;\n    this.updatePagination();\n  }\n\n  changePage(event: Event, page: number): void {\n    event.preventDefault();\n    this.currentPage = page;\n    this.updatePagination();\n  }\n\n  updatePagination(): void {\n    const start = (this.currentPage - 1) * this.itemsPerPage;\n    const end = start + this.itemsPerPage;\n    this.paginatedAppointments = this.filteredAppointments.slice(start, end);\n  }\n\n  getPageNumbers(): number[] {\n    return Array.from({ length: this.totalPages }, (_, i) => i + 1);\n  }\n\n  formatDate(dateString: string): string {\n    return new Date(dateString).toLocaleDateString('en-GB');\n  }\n\n}","<div class=\"row mt-4\">\n  <div class=\"col-12\">\n    <div class=\"card\">\n      <div class=\"card-header d-flex justify-content-between align-items-center\">\n        <h5 class=\"mb-0\"><i class=\"bi bi-calendar-check\"></i> Patient Appointments</h5>\n        <button class=\"btn btn-primary\" (click)=\"navigateToAdd()\">\n          <i class=\"bi bi-plus-circle\"></i> Add Appointment\n        </button>\n      </div>\n      <div class=\"card-body\">\n        <!-- Search and Filters -->\n        <div class=\"search-filters\">\n          <div class=\"row\">\n            <div class=\"col-md-4\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"Search by patient or doctor name\"\n                [(ngModel)]=\"searchTerm\" (input)=\"applyFilters()\">\n            </div>\n            <div class=\"col-md-3\">\n              <select class=\"form-select\" [(ngModel)]=\"doctorFilter\" (change)=\"applyFilters()\">\n                <option value=\"\">Filter by Doctor</option>\n                <option *ngFor=\"let doctor of appointmentService.doctors\" [value]=\"doctor\">\n                  {{ doctor }}\n                </option>\n              </select>\n            </div>\n            <div class=\"col-md-3\">\n              <select class=\"form-select\" [(ngModel)]=\"visitTypeFilter\" (change)=\"applyFilters()\">\n                <option value=\"\">Filter by Visit Type</option>\n                <option value=\"First\">First Visit</option>\n                <option value=\"Follow-up\">Follow-up</option>\n              </select>\n            </div>\n            <div class=\"col-md-2\">\n              <button class=\"btn btn-outline-primary w-100\" (click)=\"applyFilters()\">\n                <i class=\"bi bi-search\"></i> Search\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Appointments Table -->\n        <div class=\"table-responsive\">\n          <table class=\"table table-hover\">\n            <thead class=\"table-dark\">\n              <tr>\n                <th>Patient</th>\n                <th>Doctor</th>\n                <th>Date</th>\n                <th>Visit Type</th>\n                <th>Diagnosis</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let appointment of paginatedAppointments\">\n                <td>{{ appointment.patient }}</td>\n                <td>{{ appointment.doctor }}</td>\n                <td>{{ formatDate(appointment.date) }}</td>\n                <td>\n                  <span class=\"badge\" [ngClass]=\"appointment.visitType === 'First' ? 'bg-primary' : 'bg-secondary'\">\n                    {{ appointment.visitType }}\n                  </span>\n                </td>\n                <td>{{ appointment.diagnosis }}</td>\n                <td>\n                                    <button class=\"btn btn-sm btn-outline-primary btn-action me-1\"\n                    (click)=\"editAppointment(appointment.id)\">\n                    <i class=\"bi bi-pencil\"></i> Edit\n                  </button>\n                  <button class=\"btn btn-sm btn-outline-primary btn-action me-1\"\n                    (click)=\"editAppointment(appointment.id)\">\n                    <i class=\"bi bi-pencil\"></i> Edit\n                  </button>\n                  <button class=\"btn btn-sm btn-outline-danger btn-action me-1\"\n                    (click)=\"deleteAppointment(appointment.id)\">\n                    <i class=\"bi bi-trash\"></i> Delete\n                  </button>\n                  <button class=\"btn btn-sm btn-outline-success btn-action\" (click)=\"downloadPrescription(appointment)\">\n                    <i class=\"bi bi-download\"></i> PDF\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <!-- Pagination -->\n        <nav *ngIf=\"totalPages > 1\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\" *ngFor=\"let page of getPageNumbers()\" [ngClass]=\"{ active: page === currentPage }\">\n              <a class=\"page-link\" href=\"#\" (click)=\"changePage($event, page)\">{{ page }}</a>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  </div>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}