{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AppointmentService {\n  // private selectedAppointment!: AppointmentDTO;\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    // to del\n    this.appointments = [{\n      id: 1,\n      patient: 'John Doe',\n      doctor: 'Dr. Smith',\n      date: '2025-08-20',\n      visitType: 'First',\n      diagnosis: 'Fever',\n      notes: 'Patient complains of high fever',\n      prescriptions: [{\n        medicine: 'Paracetamol',\n        dosage: '500mg 2x/day',\n        startDate: '2025-08-20',\n        endDate: '2025-08-25',\n        notes: 'Take after meals'\n      }, {\n        medicine: 'Amoxicillin',\n        dosage: '250mg 3x/day',\n        startDate: '2025-08-20',\n        endDate: '2025-08-27',\n        notes: 'Before meal'\n      }]\n    }, {\n      id: 2,\n      patient: 'Jane Smith',\n      doctor: 'Dr. Brown',\n      date: '2025-08-21',\n      visitType: 'Follow-up',\n      diagnosis: 'Diabetes',\n      notes: 'Regular checkup',\n      prescriptions: [{\n        medicine: 'Metformin',\n        dosage: '850mg 1x/day',\n        startDate: '2025-08-21',\n        endDate: '2025-09-21',\n        notes: 'Morning dose'\n      }]\n    }];\n    this.appointmentsSubject = new BehaviorSubject(this.appointments);\n    this.appointments$ = this.appointmentsSubject.asObservable();\n    this.patients = ['John Doe', 'Jane Smith', 'Bob Johnson'];\n    this.doctors = ['Dr. Smith', 'Dr. Brown', 'Dr. Johnson'];\n    this.medicines = ['Paracetamol', 'Amoxicillin', 'Metformin', 'Aspirin', 'Ibuprofen', 'Omeprazole'];\n    this.url = `${environment.apiUrl}/appointments`;\n  }\n  // setAppointment(appointment: AppointmentDTO) {\n  //   this.selectedAppointment = appointment;\n  // }\n  // getAppointment(): AppointmentDTO {\n  //   return this.selectedAppointment;\n  // }\n  createAppointment(appointmentDTO) {\n    return this.httpClient.post(this.url, appointmentDTO, {\n      responseType: 'json'\n    });\n  }\n  updateAppointment(id, appointmentDTO) {\n    let fullUrl = this.url + `/${id}`;\n    return this.httpClient.put(fullUrl, appointmentDTO, {\n      responseType: 'json'\n    });\n  }\n  deleteAppointment(id) {\n    let fullUrl = this.url + `/${id}`;\n    return this.httpClient.delete(fullUrl, {\n      responseType: 'json'\n    });\n  }\n  getAppointmentById(id) {\n    const fullUrl = `${this.url}/${id}`;\n    return this.httpClient.get(fullUrl);\n  }\n  getAppointments() {\n    return this.appointments$;\n  }\n  static {\n    this.ɵfac = function AppointmentService_Factory(t) {\n      return new (t || AppointmentService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AppointmentService,\n      factory: AppointmentService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","AppointmentService","constructor","httpClient","appointments","id","patient","doctor","date","visitType","diagnosis","notes","prescriptions","medicine","dosage","startDate","endDate","appointmentsSubject","BehaviorSubject","appointments$","asObservable","patients","doctors","medicines","url","apiUrl","createAppointment","appointmentDTO","post","responseType","updateAppointment","fullUrl","put","deleteAppointment","delete","getAppointmentById","get","getAppointments","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Numan Al Bakir\\source\\repos\\MedicalAppointmentSystem\\ClientApp\\src\\app\\_services\\appointment.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AppointmentDTO } from '../_models/appointmentDTO';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppointmentService {\n\n  private url!: string;\n  // private selectedAppointment!: AppointmentDTO;\n\n  constructor(private httpClient: HttpClient) {\n    this.url = `${environment.apiUrl}/appointments`;\n  }\n\n  // setAppointment(appointment: AppointmentDTO) {\n  //   this.selectedAppointment = appointment;\n  // }\n\n  // getAppointment(): AppointmentDTO {\n  //   return this.selectedAppointment;\n  // }\n\n\n  createAppointment(appointmentDTO: AppointmentDTO) {\n    return this.httpClient.post<AppointmentDTO>(this.url, appointmentDTO, { responseType: 'json' });\n  }\n\n  updateAppointment(id: number, appointmentDTO: AppointmentDTO) {\n    let fullUrl = this.url + `/${id}`;\n    return this.httpClient.put<AppointmentDTO>(fullUrl, appointmentDTO, { responseType: 'json' });\n  }\n\n  deleteAppointment(id: number) {\n    let fullUrl = this.url + `/${id}`;\n    return this.httpClient.delete(fullUrl, { responseType: 'json' });\n  }\n\n  getAppointmentById(id: number): Observable<AppointmentDTO> {\n    const fullUrl = `${this.url}/${id}`;\n    return this.httpClient.get<AppointmentDTO>(fullUrl);\n  }\n\n  // to del\n  private appointments: Appointment[] = [\n    {\n      id: 1,\n      patient: 'John Doe',\n      doctor: 'Dr. Smith',\n      date: '2025-08-20',\n      visitType: 'First',\n      diagnosis: 'Fever',\n      notes: 'Patient complains of high fever',\n      prescriptions: [\n        { medicine: 'Paracetamol', dosage: '500mg 2x/day', startDate: '2025-08-20', endDate: '2025-08-25', notes: 'Take after meals' },\n        { medicine: 'Amoxicillin', dosage: '250mg 3x/day', startDate: '2025-08-20', endDate: '2025-08-27', notes: 'Before meal' }\n      ]\n    },\n    {\n      id: 2,\n      patient: 'Jane Smith',\n      doctor: 'Dr. Brown',\n      date: '2025-08-21',\n      visitType: 'Follow-up',\n      diagnosis: 'Diabetes',\n      notes: 'Regular checkup',\n      prescriptions: [\n        { medicine: 'Metformin', dosage: '850mg 1x/day', startDate: '2025-08-21', endDate: '2025-09-21', notes: 'Morning dose' }\n      ]\n    }\n  ];\n\n  private appointmentsSubject = new BehaviorSubject<Appointment[]>(this.appointments);\n  public appointments$ = this.appointmentsSubject.asObservable();\n\n  patients = ['John Doe', 'Jane Smith', 'Bob Johnson'];\n  doctors = ['Dr. Smith', 'Dr. Brown', 'Dr. Johnson'];\n  medicines = ['Paracetamol', 'Amoxicillin', 'Metformin', 'Aspirin', 'Ibuprofen', 'Omeprazole'];\n\n  getAppointments(): Observable<Appointment[]> {\n    return this.appointments$;\n  }\n\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}