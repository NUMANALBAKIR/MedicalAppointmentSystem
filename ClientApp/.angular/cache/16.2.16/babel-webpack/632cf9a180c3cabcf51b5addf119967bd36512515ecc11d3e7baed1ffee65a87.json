{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let PrescriptionDetailsComponent = class PrescriptionDetailsComponent {\n  constructor(router, route, fb, appoint) {\n    this.router = router;\n    this.route = route;\n    this.fb = fb;\n    this.appoint = appoint;\n  }\n  ngOnInit() {}\n  get prescriptions() {\n    return this.prescriptionForm.get('prescriptions');\n  }\n  createPrescriptionForm() {\n    return this.fb.group({\n      medicine: ['', Validators.required],\n      dosage: ['', Validators.required],\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required],\n      notes: ['']\n    });\n  }\n  addPrescription() {\n    this.prescriptions.push(this.createPrescriptionForm());\n  }\n  removePrescription(index) {\n    if (this.prescriptions.length > 1) {\n      this.prescriptions.removeAt(index);\n    }\n  }\n  onSubmit() {\n    if (this.prescriptionForm.valid) {\n      const formValue = this.prescriptionForm.value;\n      console.log('Prescriptions:', formValue.prescriptions);\n      // Process the prescription data here\n    }\n  }\n\n  cancel() {\n    this.router.navigate(['/appointments']);\n  }\n};\nPrescriptionDetailsComponent = __decorate([Component({\n  selector: 'app-prescription-details',\n  templateUrl: './prescription-details.component.html',\n  styleUrls: ['./prescription-details.component.css']\n})], PrescriptionDetailsComponent);","map":{"version":3,"names":["Component","Validators","PrescriptionDetailsComponent","constructor","router","route","fb","appoint","ngOnInit","prescriptions","prescriptionForm","get","createPrescriptionForm","group","medicine","required","dosage","startDate","endDate","notes","addPrescription","push","removePrescription","index","length","removeAt","onSubmit","valid","formValue","value","console","log","cancel","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Numan Al Bakir\\source\\repos\\MedicalAppointmentSystem\\ClientApp\\src\\app\\prescription-details\\prescription-details.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Appointment } from '../_models/appointment';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Prescription } from '../_models/prescription';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-prescription-details',\n  templateUrl: './prescription-details.component.html',\n  styleUrls: ['./prescription-details.component.css']\n})\nexport class PrescriptionDetailsComponent implements OnInit {\n\n  prescriptionForm!: FormGroup;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    public appoint\n  ) { }\n\n  ngOnInit() {\n  }\n\n\n get prescriptions(): FormArray {\n    return this.prescriptionForm.get('prescriptions') as FormArray;\n  }\n\ncreatePrescriptionForm(): FormGroup {\n    return this.fb.group({\n      medicine: ['', Validators.required],\n      dosage: ['', Validators.required],\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required],\n      notes: ['']\n    });\n  }\n\n\n  addPrescription() {\n    this.prescriptions.push(this.createPrescriptionForm());\n  }\n\n  removePrescription(index: number) {\n    if (this.prescriptions.length > 1) {\n      this.prescriptions.removeAt(index);\n    }\n  }\n\n\n  onSubmit() {\n    if (this.prescriptionForm.valid) {\n      const formValue = this.prescriptionForm.value;\n      console.log('Prescriptions:', formValue.prescriptions);\n      // Process the prescription data here\n    }\n  }\n\n  cancel(): void {\n    this.router.navigate(['/appointments']);\n  }\n\n  // isFieldInvalid(fieldName: string): boolean {\n  //   const field = this.prescriptionForm.get(fieldName);\n  //   return !!(field && field.invalid && (field.dirty || field.touched));\n  // }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAA4CC,UAAU,QAAQ,gBAAgB;AASvE,WAAMC,4BAA4B,GAAlC,MAAMA,4BAA4B;EAIvCC,YACUC,MAAc,EACdC,KAAqB,EACrBC,EAAe,EAChBC,OAAO;IAHN,KAAAH,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,EAAE,GAAFA,EAAE;IACH,KAAAC,OAAO,GAAPA,OAAO;EACZ;EAEJC,QAAQA,CAAA,GACR;EAGD,IAAIC,aAAaA,CAAA;IACd,OAAO,IAAI,CAACC,gBAAgB,CAACC,GAAG,CAAC,eAAe,CAAc;EAChE;EAEFC,sBAAsBA,CAAA;IAClB,OAAO,IAAI,CAACN,EAAE,CAACO,KAAK,CAAC;MACnBC,QAAQ,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACc,QAAQ,CAAC;MACnCC,MAAM,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACc,QAAQ,CAAC;MACjCE,SAAS,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACc,QAAQ,CAAC;MACpCG,OAAO,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACc,QAAQ,CAAC;MAClCI,KAAK,EAAE,CAAC,EAAE;KACX,CAAC;EACJ;EAGAC,eAAeA,CAAA;IACb,IAAI,CAACX,aAAa,CAACY,IAAI,CAAC,IAAI,CAACT,sBAAsB,EAAE,CAAC;EACxD;EAEAU,kBAAkBA,CAACC,KAAa;IAC9B,IAAI,IAAI,CAACd,aAAa,CAACe,MAAM,GAAG,CAAC,EAAE;MACjC,IAAI,CAACf,aAAa,CAACgB,QAAQ,CAACF,KAAK,CAAC;;EAEtC;EAGAG,QAAQA,CAAA;IACN,IAAI,IAAI,CAAChB,gBAAgB,CAACiB,KAAK,EAAE;MAC/B,MAAMC,SAAS,GAAG,IAAI,CAAClB,gBAAgB,CAACmB,KAAK;MAC7CC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,SAAS,CAACnB,aAAa,CAAC;MACtD;;EAEJ;;EAEAuB,MAAMA,CAAA;IACJ,IAAI,CAAC5B,MAAM,CAAC6B,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;EACzC;CAOD;AA1DY/B,4BAA4B,GAAAgC,UAAA,EALxClC,SAAS,CAAC;EACTmC,QAAQ,EAAE,0BAA0B;EACpCC,WAAW,EAAE,uCAAuC;EACpDC,SAAS,EAAE,CAAC,sCAAsC;CACnD,CAAC,C,EACWnC,4BAA4B,CA0DxC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}