{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nexport let AppointmentListComponent = class AppointmentListComponent {\n  constructor(appointmentService, dataService, router) {\n    this.appointmentService = appointmentService;\n    this.dataService = dataService;\n    this.router = router;\n    this.appointments = [];\n    this.filteredAppointments = [];\n    this.paginatedAppointments = [];\n    this.searchTerm = '';\n    this.doctorFilter = '';\n    this.visitTypeFilter = '';\n    this.currentPage = 1;\n    this.itemsPerPage = 10;\n    this.totalPages = 0;\n    this.destroy$ = new Subject();\n  }\n  ngOnInit() {\n    this.allDoctor = this.dataService.getAllDoctor();\n    this.appointmentService.getAppointments().pipe(takeUntil(this.destroy$)).subscribe(appointments => {\n      this.appointments = appointments;\n      this.applyFilters();\n    });\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  navigateToAdd() {\n    this.router.navigate(['/add-appointment']);\n  }\n  editAppointment(id) {\n    this.router.navigate(['/edit-appointment', id]);\n  }\n  deleteAppointment(id) {\n    if (confirm('Are you sure you want to delete this appointment?')) {\n      this.appointmentService.deleteAppointment(id);\n    }\n  }\n  downloadPrescription(appointment) {\n    const prescriptionModal = document.getElementById('prescriptionModal');\n    if (prescriptionModal && prescriptionModal.show) {\n      prescriptionModal.show(appointment);\n    }\n  }\n  applyFilters() {\n    this.filteredAppointments = this.appointments.filter(appointment => {\n      const matchesSearch = !this.searchTerm || appointment.patient.toLowerCase().includes(this.searchTerm.toLowerCase()) || appointment.doctor.toLowerCase().includes(this.searchTerm.toLowerCase());\n      const matchesDoctor = !this.doctorFilter || appointment.doctor === this.doctorFilter;\n      const matchesVisitType = !this.visitTypeFilter || appointment.visitType === this.visitTypeFilter;\n      return matchesSearch && matchesDoctor && matchesVisitType;\n    });\n    this.totalPages = Math.ceil(this.filteredAppointments.length / this.itemsPerPage);\n    this.currentPage = 1;\n    this.updatePagination();\n  }\n  changePage(event, page) {\n    event.preventDefault();\n    this.currentPage = page;\n    this.updatePagination();\n  }\n  updatePagination() {\n    const start = (this.currentPage - 1) * this.itemsPerPage;\n    const end = start + this.itemsPerPage;\n    this.paginatedAppointments = this.filteredAppointments.slice(start, end);\n  }\n  getPageNumbers() {\n    return Array.from({\n      length: this.totalPages\n    }, (_, i) => i + 1);\n  }\n  formatDate(dateString) {\n    return new Date(dateString).toLocaleDateString('en-GB');\n  }\n  prescriptionDetails(id) {\n    this.router.navigate(['/prescription-details', id]);\n  }\n};\nAppointmentListComponent = __decorate([Component({\n  selector: 'app-appointment-list',\n  templateUrl: './appointment-list.component.html',\n  styleUrls: ['./appointment-list.component.css']\n})], AppointmentListComponent);","map":{"version":3,"names":["Component","Subject","takeUntil","AppointmentListComponent","constructor","appointmentService","dataService","router","appointments","filteredAppointments","paginatedAppointments","searchTerm","doctorFilter","visitTypeFilter","currentPage","itemsPerPage","totalPages","destroy$","ngOnInit","allDoctor","getAllDoctor","getAppointments","pipe","subscribe","applyFilters","ngOnDestroy","next","complete","navigateToAdd","navigate","editAppointment","id","deleteAppointment","confirm","downloadPrescription","appointment","prescriptionModal","document","getElementById","show","filter","matchesSearch","patient","toLowerCase","includes","doctor","matchesDoctor","matchesVisitType","visitType","Math","ceil","length","updatePagination","changePage","event","page","preventDefault","start","end","slice","getPageNumbers","Array","from","_","i","formatDate","dateString","Date","toLocaleDateString","prescriptionDetails","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Numan Al Bakir\\source\\repos\\MedicalAppointmentSystem\\ClientApp\\src\\app\\appointment-list\\appointment-list.component.ts"],"sourcesContent":["import { Appointment } from '../_models/appointment';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, Subject, takeUntil } from 'rxjs';\nimport { AppointmentService } from '../_services/appointment.service';\nimport { Doctor } from '../_models/Doctor';\n\n@Component({\n  selector: 'app-appointment-list',\n  templateUrl: './appointment-list.component.html',\n  styleUrls: ['./appointment-list.component.css']\n})\nexport class AppointmentListComponent implements OnInit {\n\n  allDoctor!: Observable<Doctor[]>;\n  appointments: Appointment[] = [];\n  filteredAppointments: Appointment[] = [];\n  paginatedAppointments: Appointment[] = [];\n\n  searchTerm = '';\n  doctorFilter = '';\n  visitTypeFilter = '';\n\n  currentPage = 1;\n  itemsPerPage = 10;\n  totalPages = 0;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    public appointmentService: AppointmentService,\n    public dataService: DataService,\n    private router: Router\n  ) {\n\n   }\n\n  ngOnInit(): void {\n    this.allDoctor = this.dataService.getAllDoctor();\n\n    this.appointmentService.getAppointments()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(appointments => {\n        this.appointments = appointments;\n        this.applyFilters();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  navigateToAdd(): void {\n    this.router.navigate(['/add-appointment']);\n  }\n\n  editAppointment(id: number): void {\n    this.router.navigate(['/edit-appointment', id]);\n  }\n\n  deleteAppointment(id: number): void {\n    if (confirm('Are you sure you want to delete this appointment?')) {\n      this.appointmentService.deleteAppointment(id);\n    }\n  }\n\n  downloadPrescription(appointment: Appointment): void {\n    const prescriptionModal = document.getElementById('prescriptionModal') as any;\n    if (prescriptionModal && prescriptionModal.show) {\n      prescriptionModal.show(appointment);\n    }\n  }\n\n  applyFilters(): void {\n\n    this.filteredAppointments = this.appointments.filter(appointment =>\n      {\n        const matchesSearch = !this.searchTerm ||\n          appointment.patient.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\n          appointment.doctor.toLowerCase().includes(this.searchTerm.toLowerCase());\n\n        const matchesDoctor = !this.doctorFilter || appointment.doctor === this.doctorFilter;\n        const matchesVisitType = !this.visitTypeFilter || appointment.visitType === this.visitTypeFilter;\n\n        return matchesSearch && matchesDoctor && matchesVisitType;\n      }\n    );\n\n    this.totalPages = Math.ceil(this.filteredAppointments.length / this.itemsPerPage);\n    this.currentPage = 1;\n    this.updatePagination();\n  }\n\n  changePage(event: Event, page: number): void {\n    event.preventDefault();\n    this.currentPage = page;\n    this.updatePagination();\n  }\n\n  updatePagination(): void {\n    const start = (this.currentPage - 1) * this.itemsPerPage;\n    const end = start + this.itemsPerPage;\n    this.paginatedAppointments = this.filteredAppointments.slice(start, end);\n  }\n\n  getPageNumbers(): number[] {\n    return Array.from({ length: this.totalPages }, (_, i) => i + 1);\n  }\n\n  formatDate(dateString: string): string {\n    return new Date(dateString).toLocaleDateString('en-GB');\n  }\n\n  prescriptionDetails(id: number): void {\n    this.router.navigate(['/prescription-details', id]);\n  }\n\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}