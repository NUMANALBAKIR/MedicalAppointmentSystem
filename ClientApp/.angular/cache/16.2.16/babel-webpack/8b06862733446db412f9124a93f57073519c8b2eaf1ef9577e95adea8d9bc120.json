{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = `${environment.apiUrl}/Data`;\n  }\n  getMedicines() {\n    url = this.url + '/medicines';\n    return this.httpClient.get(this.url, {\n      responseType: 'json'\n    });\n  }\n  getDoctors() {\n    this.url = this.url + '/doctors';\n    return this.httpClient.get(this.url, {\n      responseType: 'json'\n    });\n  }\n  getPatients() {\n    this.url = this.url + '/patients';\n    return this.httpClient.get(this.url, {\n      responseType: 'json'\n    });\n  }\n  static {\n    this.ɵfac = function DataService_Factory(t) {\n      return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DataService,\n      factory: DataService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","DataService","constructor","httpClient","url","apiUrl","getMedicines","get","responseType","getDoctors","getPatients","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Numan Al Bakir\\source\\repos\\MedicalAppointmentSystem\\ClientApp\\src\\app\\_services\\data.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Medicine } from '../_models/medicine';\nimport { Patient } from '../_models/Patient';\nimport { Doctor } from '../_models/Doctor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private url!: string;\n\n  constructor(private httpClient: HttpClient) {\n    this.url = `${environment.apiUrl}/Data`;\n  }\n\n  getMedicines(): Observable<Medicine[]> {\n    url = this.url + '/medicines';\n    return this.httpClient.get<Medicine[]>(this.url, { responseType: 'json' });\n  }\n\n  getDoctors(): Observable<Doctor[]> {\n    this.url = this.url + '/doctors';\n    return this.httpClient.get<Doctor[]>(this.url, { responseType: 'json' });\n  }\n\n  getPatients(): Observable<Patient[]> {\n    this.url = this.url + '/patients';\n    return this.httpClient.get<Patient[]>(this.url, { responseType: 'json' });\n  }\n\n\n}\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,8BAA8B;;;AAQ1D,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAC5B,IAAI,CAACC,GAAG,GAAG,GAAGJ,WAAW,CAACK,MAAM,OAAO;EACzC;EAEAC,YAAYA,CAAA;IACVF,GAAG,GAAG,IAAI,CAACA,GAAG,GAAG,YAAY;IAC7B,OAAO,IAAI,CAACD,UAAU,CAACI,GAAG,CAAa,IAAI,CAACH,GAAG,EAAE;MAAEI,YAAY,EAAE;IAAM,CAAE,CAAC;EAC5E;EAEAC,UAAUA,CAAA;IACR,IAAI,CAACL,GAAG,GAAG,IAAI,CAACA,GAAG,GAAG,UAAU;IAChC,OAAO,IAAI,CAACD,UAAU,CAACI,GAAG,CAAW,IAAI,CAACH,GAAG,EAAE;MAAEI,YAAY,EAAE;IAAM,CAAE,CAAC;EAC1E;EAEAE,WAAWA,CAAA;IACT,IAAI,CAACN,GAAG,GAAG,IAAI,CAACA,GAAG,GAAG,WAAW;IACjC,OAAO,IAAI,CAACD,UAAU,CAACI,GAAG,CAAY,IAAI,CAACH,GAAG,EAAE;MAAEI,YAAY,EAAE;IAAM,CAAE,CAAC;EAC3E;;;uBArBWP,WAAW,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXb,WAAW;MAAAc,OAAA,EAAXd,WAAW,CAAAe,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}